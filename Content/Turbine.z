// Increase the max speed of a core as well as how fast it can accelerate (the linear scalar).
class Turbine : ScriptComponent
{
    // Upgrade curve for how we effect the max speed of the core.
    [Property]
    var MaxSpeedCurve : SampleCurve = SampleCurve.Find("TurbineMaxSpeed");
    
    // Upgrade curve for how we effect the linear scalar for the speed of the core.
    [Property]
    var LinearScalarCurve : SampleCurve = SampleCurve.Find("TurbineLinearScalar");
    
    // The core that we add speed to.
    var CoreCog : Cog = null;
    
    constructor() : base()
    {
    }

    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, "AttachToCore", this.OnAttachToCore);
        Zero.Connect(this.Owner, "DetachFromCore", this.OnDetachFromCore);
        Zero.Connect(this.Owner, Events.Upgrade, this.OnUpgrade);
    }
    
    function GetLevel() : Real
    {
        var upgradable = this.Owner.Upgradable;
        if(upgradable != null)
        {
            return upgradable.Level;
        }
        return 0.0;
    }
    
    function OnAttachToCore(attachEvent : AttachEvent)
    {
        // Sample the curves and add those values to the core
        this.CoreCog = attachEvent.CoreCog;
        if(this.CoreCog != null)
        {
            var core = this.CoreCog.Core;
            var level = this.GetLevel();
            core.MaxSpeed += this.MaxSpeedCurve.Sample(level);
            core.LinearScalar += this.LinearScalarCurve.Sample(level);
        }
    }
    
    function OnDetachFromCore(attachEvent : AttachEvent)
    {
        // Sample the curves and subtract those values from the core's speed the core
        this.CoreCog = attachEvent.CoreCog;
        if(this.CoreCog != null)
        {
            var core = this.CoreCog.Core;
            var level = this.GetLevel();
            core.MaxSpeed -= this.MaxSpeedCurve.Sample(level);
            core.LinearScalar -= this.LinearScalarCurve.Sample(level);
        }
    }
    
    function OnUpgrade(e : Event)
    {
        var attachEvent = new AttachEvent();
        attachEvent.CoreCog = this.CoreCog;
        this.OnDetachFromCore(attachEvent);
        this.OnAttachToCore(attachEvent);
    }
}